{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"4OAcEA,gBATqB,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKJ,IAAMM,EAAmBR,EACnBS,EAAcT,SACdU,EAAYV,cACZW,EAAiBX,Y,OCsCfY,EAtDC,WACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAGOC,EAAW,SAACC,GACf,MAEIA,EADAC,OAAUC,EADd,EACcA,KAAMC,EADpB,EACoBA,MAER,UAARD,EACAV,EAASW,GACI,aAARD,GACLR,EAAYS,IAKdC,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAMVX,EANU,gCAOIT,EAAYqB,+BAA+BhB,EAAOE,GAPtD,sDASIP,EAAYsB,2BAA2BjB,EAAOE,GATlD,yEAcTK,EAAS,KAAMW,SAdN,0DAAH,sDAoBb,OACI,qCACC,uBAAML,SAAUA,EAAhB,UACE,uBAAOF,KAAK,QAAQQ,KAAK,QAAQC,YAAY,QAAQC,UAAQ,EAACT,MAAOZ,EAAOQ,SAAUA,IACtF,uBAAOG,KAAK,WAAWQ,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACT,MAAOV,EAAUM,SAAUA,IAClG,uBAAOW,KAAK,SAASP,MAAOR,EAAa,iBAAmB,WAC3DE,KAEL,sBAAMgB,QAVa,kBAAMjB,GAAc,SAACkB,GAAD,OAAWA,MAUlD,SACKnB,EAAa,UAAY,uBCrBvBoB,EA3BF,WAGT,IAAMC,EAAa,uCAAG,WAAMhB,GAAN,iBAAAK,EAAA,4DAIJ,YAFDH,EAASF,EAAnBC,OAAUC,MAGNe,EAAW,IAAIhC,EAAiBiC,KAAKC,mBACxB,WAARjB,IACLe,EAAW,IAAIhC,EAAiBiC,KAAKE,oBAP1B,SASAlC,EAAYmC,gBAAgBJ,GAT5B,yDAAH,sDAarB,OACE,gCACI,cAAC,EAAD,IACA,gCACI,wBAAQJ,QAASG,EAAed,KAAK,SAArC,kCACA,wBAAQW,QAASG,EAAed,KAAK,SAArC,2C,QCqCGoB,EA1DF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAEZ,GAFkC,EAAZC,QAEQlC,oBAAS,IAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAgCpC,mBAASiC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,sBAAAzB,EAAA,0DACP0B,OAAOC,QAAQ,qDADR,gCAMR7C,EAAU8C,IAAV,iBAAwBV,EAASW,KAAMC,SAN/B,UAOe,KAA3BZ,EAASa,cAPG,gCAQRhD,EAAeiD,WAAWd,EAASa,eAAeD,SAR1C,2CAAH,qDAYbG,EAAgB,kBAAMZ,GAAW,SAACZ,GAAD,OAAWA,MAS5CV,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAETnB,EAAU8C,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAACZ,KAAMC,IAF5C,OAGfF,GAAW,GAHI,2CAAH,sDAMd,OACI,8BACKD,EACG,qCACA,uBAAMrB,SAAUA,EAAhB,UACI,uBAAOL,SAlBN,SAACC,GACd,IACaG,EACTH,EADAC,OAASE,MAEb0B,EAAY1B,IAc2BA,MAAOyB,EAAUhB,UAAQ,IACpD,uBAAOF,KAAK,SAASP,MAAM,oBAE/B,wBAAQU,QAASyB,EAAjB,uBAGA,qCACJ,6BAAKf,EAASI,OACbJ,EAASa,eACN,qBAAKI,IAAMjB,EAASa,cAAeK,MAAM,OAAOC,OAAO,SAGtD,wBAAQ7B,QAASiB,EAAjB,0BACA,wBAAQjB,QAASyB,EAAjB,8BCmBFK,EAnEM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,QAEpB,EAA0BtD,mBAAS,IAAnC,mBAAOuD,EAAP,KAAcC,EAAd,KACA,EAAoCxD,mBAAS,IAA7C,mBAAOyD,EAAP,KAAmBC,EAAnB,KAEM5C,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACbL,EAAMM,iBACF8B,EAAe,GACA,KAAfW,EAHS,wBAIHE,EAAgB7D,EAAe8D,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,iBAJb,SAKcH,EAAcI,UAAUN,EAAY,YALlD,cAKHO,EALG,gBAMaA,EAASJ,IAAIK,iBAN1B,OAMTnB,EANS,sBAUPb,EAAU,CACZI,KAAMkB,EACNW,UAAYC,KAAKC,MACjBC,UAAYf,EAAQQ,IACpBhB,iBAdS,UAgBPjD,EAAUyE,WAAW,UAAUC,IAAItC,GAhB5B,QAiBbuB,EAAS,IACTE,EAAc,IAlBD,4CAAH,sDA8Cd,OAEI,uBAAM5C,SAAUA,EAAhB,UACI,uBAAOD,MAAO0C,EACd9C,SA7BQ,SAACC,GACbA,EAAMM,iBACN,IACaH,EACTH,EADAC,OAASE,MAEb2C,EAAS3C,IAyBLO,KAAK,OACLC,YAAY,uBACZmD,UAAY,MACZ,uBAAOpD,KAAK,OAAOqD,OAAO,UAAUhE,SAzBxB,SAACC,GAClB,IAGMgE,EADFhE,EADAC,OAASgE,MAES,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IACqBC,EACjBD,EADAE,cAAiBD,OAErBtB,EAAcsB,IAElBJ,EAAOM,cAAcR,MAchB,uBAAOtD,KAAK,SAASP,MAAM,UAC1B4C,GAAgB,gCAAK,qBAAKP,IAAKO,EAAYN,MAAM,OAAOC,OAAO,SAChE,wBAAQ7B,QAbU,kBAAMmC,EAAc,KAatC,0BC7BGyB,EA7BF,SAAC,GAAe,IAAd7B,EAAa,EAAbA,QAEX,EAA6BtD,mBAAS,IAAtC,mBAAQoF,EAAR,KAAgBC,EAAhB,KAcA,OAXAC,qBAAU,WACPzF,EAAUyE,WAAW,UAAUiB,YAAW,SAACC,GACvC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBAC/BhD,GAAKgD,EAAShD,IACXgD,EAASC,WAEhBR,EAAUI,QAEf,IAIE,qCACA,cAAC,EAAD,CAAcnC,QAASA,IACvB,8BACK8B,EAAOO,KAAI,SAACpC,GAAD,OACT,cAAC,EAAD,CAAuBtB,SAAUsB,EACjCrB,QAAUqB,EAAMc,YAAcf,EAAQQ,KADzBP,EAAMX,aCWnBkD,EArCC,SAAC,GAA6B,IAA3BxC,EAA0B,EAA1BA,QAASyC,EAAiB,EAAjBA,YACnBC,EAAUC,cAChB,EAA4CjG,mBAASsD,EAAQ4C,gBAA7D,mBAAOA,EAAP,KAAuBC,EAAvB,KAaOrF,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,yDACbL,EAAMM,iBACHsC,EAAQ8C,cAAgBF,EAFd,gCAGH5C,EAAQ+C,cAAc,CAACD,YAAcF,IAHlC,OAITH,IAJS,2CAAH,sDASd,OACI,qCACA,uBAAMjF,SAAUA,EAAhB,UACI,uBAAOM,KAAK,OAAOC,YAAY,eAAeZ,SAnBrC,SAACC,GACd,IACcG,EACVH,EADAC,OAAUE,MAEdsF,EAAkBtF,IAeoDA,MAAOqF,IACzE,uBAAO9E,KAAK,SAASP,MAAM,sBAG3B,wBAAQU,QA3BM,WAAO3B,EAAY0G,UACrCN,EAAQO,KAAK,MA0BT,yBChBGC,EAhBI,SAAC,GAAe,IAAdlD,EAAa,EAAbA,QACjB,OACI,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMmD,GAAI,IAAV,oBAEJ,6BACI,eAAC,IAAD,CAAMA,GAAI,WAAV,UAAsBnD,EAAQ8C,YAA9B,4BCsBLM,EA1BG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,WAAYrD,EAA0B,EAA1BA,QAASyC,EAAiB,EAAjBA,YAEtC,OACG,eAAC,IAAD,WACKY,GAAc,cAAC,EAAD,CAAYrD,QAASA,IACpC,cAAC,IAAD,UACKqD,EACE,qCACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAnB,SACI,cAAC,EAAD,CAAMvD,QAAUA,MAEpB,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAASd,YAAaA,EAAazC,QAAYA,SAInD,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,YCuBPC,MA1Cf,WACE,MAAuB9G,oBAAS,GAAhC,mBAAM+G,EAAN,KAAYC,EAAZ,KAEA,EAA8BhH,mBAAS,MAAvC,mBAAOsD,EAAP,KAAgB2D,EAAhB,KA8BA,OA7BA3B,qBAAU,WACR1F,EAAYsH,oBAAmB,SAACC,GAG9BF,IAFCE,GAEU,CACTrD,IAAKqD,EAAKrD,IACVsC,YAAce,EAAKf,YACnBC,cAAgB,SAACe,GAAD,OAAUD,EAAKd,cAAce,MAMjDJ,GAAQ,QAER,IAeA,mCACED,EAAQ,cAAC,EAAD,CAAWhB,YAXH,WAClB,IAAMoB,EAAOvH,EAAYyH,YACzBJ,EAAW,CACTnD,IAAMqD,EAAKrD,IACXsC,YAAce,EAAKf,YACnBC,cAAgB,SAACe,GAAD,OAAUD,EAAKd,cAAce,OAMAT,WAAaW,QAAQhE,GAAUA,QAAUA,IAAe,qB,MClC3GiE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,W","file":"static/js/main.b38f3ee8.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import {authService, firebaseInstance} from \"fbase\"; //파이어베이스 인증\r\nimport {useState} from \"react\"; //함수\r\n\r\nconst AuthForm =() =>{\r\n    const [email, setEmail] = useState(\"\"); //이메일 \r\n    const [password, setPassword] = useState(\"\"); //패스워드\r\n    const [newAccount, setNewAccount] = useState(true); //회원가입\r\n    const [error, setError] = useState(\"\"); //에러 메시지\r\n\r\n     //버튼 이벤트\r\n     const onChange = (event) => {\r\n        const{\r\n            target : {name, value},\r\n        } = event;\r\n        if (name=== \"email\"){\r\n            setEmail(value);\r\n        }else if(name ===\"password\"){\r\n            setPassword(value);\r\n        }\r\n        \r\n    };\r\n\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n\r\n        //회원가입 이벤트\r\n        try{\r\n            let data;\r\n        if(newAccount){\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n        }else{\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n           \r\n        }catch(error){\r\n\r\n            setError(error.message);\r\n        }\r\n    }; \r\n\r\n     const toggleAccount = () => setNewAccount((prev) => !prev); //회원가입 로그인 버튼 변경\r\n\r\n     return(\r\n         <>\r\n          <form onSubmit={onSubmit}>\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n            {error}\r\n        </form>\r\n        <span onClick={toggleAccount}>\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n         </>\r\n     );\r\n};\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n     \r\n     //소셜로그인 버튼 \r\n    const onSocialClick = async(event) => { //async 비동기함수\r\n       const{\r\n           target : {name},} =event;\r\n           let provider;\r\n           if(name ===\"google\"){\r\n               provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n           }else if(name ===\"github\"){\r\n               provider = new firebaseInstance.auth.GithubAuthProvider();\r\n           }\r\n       const data = await authService.signInWithPopup(provider);\r\n      \r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <AuthForm />\r\n        <div>\r\n            <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n            <button onClick={onSocialClick} name=\"github\" >Continue with Githhhub</button>\r\n        </div>\r\n    </div>\r\n  )  ;\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService} from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet =({ nweetObj, isOwner}) =>{\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async() =>{\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n      \r\n\r\n        if(ok){\r\n           \r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n           if(nweetObj.attachmentUrl !== \"\")\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n      await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\r\n      setEditing(false);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit}>\r\n                    <input onChange={onChange} value={newNweet} required />\r\n                    <input type=\"submit\" value=\"Update Nweet\" />\r\n                </form>\r\n                <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ):(\r\n                <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && (\r\n                <img src ={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                )}\r\n           \r\n                 <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                 <button onClick={toggleEditing}>Edit Nweet</button>\r\n                </>\r\n           \r\n    \r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n//import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ( {userObj}) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        if( attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/%{uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n    \r\n        }\r\n        \r\n        const nweetObj ={\r\n            text: nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n   const onChange = (event) =>{\r\n        event.preventDefault();\r\n        const{\r\n            target: {value},\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChage = (event) =>{\r\n       const{\r\n           target :{files},\r\n       } = event;\r\n       const theFile = files[0];\r\n       const reader = new FileReader();\r\n       reader.onloadend = (finishedEvent) =>{\r\n           const{\r\n               currentTarget : {result},\r\n           } = finishedEvent;\r\n           setAttachment(result);\r\n       };\r\n       reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n\r\n        <form onSubmit={onSubmit}>\r\n            <input value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength ={120}/>\r\n            <input type=\"file\" accept=\"image/*\" onChange= {onFileChage}/>\r\n            <input type=\"submit\" value=\"Nweet\"/>\r\n            {attachment && ( <div><img src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearAttachment}>Clear</button></div>)}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","\r\nimport { dbService } from \"fbase\";\r\nimport {  useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n//import { storage } from \"firebase\";\r\n\r\nconst Home = ({userObj}) => {\r\n\r\n    const [ nweets, setNweets] = useState([]);\r\n    \r\n\r\n    useEffect(()=>{\r\n       dbService.collection(\"nweets\").onSnapshot((snapshot)=>{\r\n           const newArray = snapshot.docs.map((document) => ({\r\n               id : document.id,\r\n               ...document.data(),\r\n           }));\r\n           setNweets(newArray);\r\n       });\r\n    },[]);\r\n\r\n    \r\n    return (\r\n        <>\r\n        <NweetFactory userObj={userObj} />\r\n        <div>\r\n            {nweets.map((nweet)=>(\r\n               <Nweet key ={nweet.id} nweetObj={nweet}\r\n               isOwner ={nweet.creatorId === userObj.uid}/>   \r\n                ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nconst Profile = ({ userObj, refreshUser}) => {\r\n   const history = useHistory();\r\n   const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\r\n\r\n    const onLogOutClick = () => {authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) =>{\r\n        const{\r\n            target : {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    \r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({displayName : newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} />\r\n            <input type=\"submit\" value=\"Update Profile\" />\r\n\r\n        </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Profile;","import {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to =\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to =\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","\r\nimport { HashRouter as Router,  Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\nconst AppRouter = ( {isLoggedIn, userObj, refreshUser}) => {\r\n    \r\n    return(\r\n       <Router>\r\n           {isLoggedIn && <Navigation userObj={userObj}/>}\r\n           <Switch>\r\n              { isLoggedIn ? (\r\n                  <>\r\n                  <Route exact path =\"/\">\r\n                      <Home userObj ={userObj}/>\r\n                  </Route>\r\n                  <Route exact path=\"/profile\">\r\n                      <Profile refreshUser={refreshUser} userObj  = {userObj}/>\r\n                  </Route>\r\n                  </>\r\n              ) : (\r\n                  <Route exact path=\"/\">\r\n                      <Auth />\r\n                  </Route>\r\n              )}\r\n             \r\n           </Switch>\r\n       </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const[init, setInit] = useState(false);\n \n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=> {\n    authService.onAuthStateChanged((user)=> {\n    if(user){\n     \n      setUserObj({\n        uid: user.uid,\n        displayName : user.displayName,\n        updateProfile : (args) => user.updateProfile(args),\n\n      });\n    }else{\n      setUserObj(false);\n    }\n    setInit(true);\n  });\n  },[]\n\n\n  );\n\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setUserObj({\n      uid : user.uid,\n      displayName : user.displayName,\n      updateProfile : (args) => user.updateProfile(args),\n    });\n  };\n\n  return(\n    <>\n     {init ? (<AppRouter refreshUser={refreshUser} isLoggedIn ={Boolean(userObj)} userObj ={userObj}/> ):( \"initializing...\" )}\n     \n    </>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}