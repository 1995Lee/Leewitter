{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68f202f9.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import {authService, firebaseInstance} from \"fbase\"; //파이어베이스 인증\r\nimport {useState} from \"react\"; //함수\r\n\r\nconst AuthForm =() =>{\r\n    const [email, setEmail] = useState(\"\"); //이메일 \r\n    const [password, setPassword] = useState(\"\"); //패스워드\r\n    const [newAccount, setNewAccount] = useState(true); //회원가입\r\n    const [error, setError] = useState(\"\"); //에러 메시지\r\n\r\n     //버튼 이벤트\r\n     const onChange = (event) => {\r\n        const{\r\n            target : {name, value},\r\n        } = event;\r\n        if (name=== \"email\"){\r\n            setEmail(value);\r\n        }else if(name ===\"password\"){\r\n            setPassword(value);\r\n        }\r\n        \r\n    };\r\n\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n\r\n        //회원가입 이벤트\r\n        try{\r\n            let data;\r\n        if(newAccount){\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n        }else{\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n           \r\n        }catch(error){\r\n\r\n            setError(error.message);\r\n        }\r\n    }; \r\n\r\n     const toggleAccount = () => setNewAccount((prev) => !prev); //회원가입 로그인 버튼 변경\r\n\r\n     return(\r\n         <>\r\n          <form onSubmit={onSubmit} className=\"container\">\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\"/>\r\n            {error && <span className=\"authError\">{error}</span>} \r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n         </>\r\n     );\r\n};\r\n\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n     \r\n     //소셜로그인 버튼 \r\n    const onSocialClick = async(event) => { //async 비동기함수\r\n       const{\r\n           target : {name},} =event;\r\n           let provider;\r\n           if(name ===\"google\"){\r\n               provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n           }else if(name ===\"github\"){\r\n               provider = new firebaseInstance.auth.GithubAuthProvider();\r\n           }\r\n       const data = await authService.signInWithPopup(provider);\r\n      \r\n    };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={ {marginBottom : 30}}/>\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Githhhub<FontAwesomeIcon icon={faGithub}/></button>\r\n        </div>\r\n    </div>\r\n  )  ;\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService} from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faTrash, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nconst Nweet =({ nweetObj, isOwner}) =>{\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async() =>{\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n      \r\n\r\n        if(ok){\r\n           \r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n           if(nweetObj.attachmentUrl !== \"\")\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n      await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\r\n      setEditing(false);\r\n    };\r\n\r\n    return(\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input onChange={onChange} value={newNweet} required  placeholder=\"Edit your nweet\" autoFocus className=\"formInput\"/>\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n                </form>\r\n                <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\r\n                </>\r\n            ):(\r\n                <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && (\r\n                <img src ={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                )}\r\n            {isOwner && (\r\n                <div className=\"nweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt}/>\r\n                    </span>\r\n                </div>\r\n            )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ( {userObj}) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet === \"\"){\r\n            return;\r\n        }\r\n        let attachmentUrl =\"\";\r\n        if( attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/%{uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n    \r\n        }\r\n        \r\n        const nweetObj ={\r\n            text: nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n   const onChange = (event) =>{\r\n        event.preventDefault();\r\n        const{\r\n            target: {value},\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChage = (event) =>{\r\n       const{\r\n           target :{files},\r\n       } = event;\r\n       const theFile = files[0];\r\n       const reader = new FileReader();\r\n       reader.onloadend = (finishedEvent) =>{\r\n           const{\r\n               currentTarget : {result},\r\n           } = finishedEvent;\r\n           setAttachment(result);\r\n       };\r\n      if(Boolean(theFile)){\r\n          reader.readAsDataURL(theFile);\r\n      }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n            <input className = \"factoryInput__input\"value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength ={120}/>\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput_arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            \r\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChage} style={{opacity:0,}}/>\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img src={attachment}\r\n                    style={{ backgroundImage : attachment,}} />\r\n                    <div className=\"factoryFomr__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon ={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","\r\nimport { dbService } from \"fbase\";\r\nimport {  useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n//import { storage } from \"firebase\";\r\n\r\nconst Home = ({userObj}) => {\r\n\r\n    const [ nweets, setNweets] = useState([]);\r\n    \r\n\r\n    useEffect(()=>{\r\n       dbService.collection(\"nweets\").orderBy(\"createdAt\", \"desc\").onSnapshot((snapshot)=>{\r\n           const newArray = snapshot.docs.map((document) => ({\r\n               id : document.id,\r\n               ...document.data(),\r\n           }));\r\n           setNweets(newArray);\r\n       });\r\n    },[]);\r\n\r\n    \r\n    return (\r\n       <div className =\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div style={{marginTop : 30}}>\r\n            {nweets.map((nweet)=>(\r\n               <Nweet key ={nweet.id} nweetObj={nweet}\r\n               isOwner ={nweet.creatorId === userObj.uid}/>   \r\n                ))}\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nconst Profile = ({ userObj, refreshUser}) => {\r\n   const history = useHistory();\r\n   const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\r\n\r\n    const onLogOutClick = () => {authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) =>{\r\n        const{\r\n            target : {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    \r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({displayName : newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\"/>\r\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{\r\n                marginTop : 10,\r\n            }} />\r\n\r\n        </form>\r\n           <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n               Log Out</span>\r\n       </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Profile;","import {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display :\"flex\" , justifyContent:\"center\" , marginTop:50}}>\r\n                <li>\r\n                    <Link to =\"/\" style={{marginRight:10}}><FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" /> </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to =\"/profile\" style={{\r\n                        marginLeft:10,\r\n                        display : \"flex\",\r\n                        flexDirection : \"column\",\r\n                        alignItems : \"center\",\r\n                        fontSize : 12,\r\n                    }}><FontAwesomeIcon icon ={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{marginTop:10}}> {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Pofile\"}</span></Link>\r\n                </li>\r\n            </ul>\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","\r\nimport { auth } from \"firebase\";\r\nimport { HashRouter as Router,  Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\nconst AppRouter = ( {isLoggedIn, userObj, refreshUser}) => {\r\n    \r\n    return(\r\n       <Router>\r\n           {isLoggedIn && <Navigation userObj={userObj}/>}\r\n           <Switch>\r\n              { isLoggedIn ? (\r\n                  <div\r\n                   style={\r\n                       {\r\n                           maxWidth : 890,\r\n                           width : \"100%\",\r\n                           margin : \"0 auto\",\r\n                           marginTop : 80,\r\n                           display : \"flex\",\r\n                           justifyContent : \"center\",\r\n                       }\r\n                   }>\r\n                  <Route exact path =\"/\">\r\n                      <Home userObj ={userObj}/>\r\n                  </Route>\r\n                  <Route exact path=\"/profile\">\r\n                      <Profile refreshUser={refreshUser} userObj  = {userObj}/>\r\n                  </Route>\r\n                  </div>\r\n              ) : (\r\n                  <Route exact path=\"/\">\r\n                      <Auth />\r\n                  </Route>\r\n              )}\r\n             \r\n           </Switch>\r\n       </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const[init, setInit] = useState(false);\n \n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=> {\n    authService.onAuthStateChanged((user)=> {\n    if(user){\n     \n      setUserObj({\n        uid: user.uid,\n        displayName : user.displayName,\n        updateProfile : (args) => user.updateProfile(args),\n\n      });\n    }else{\n      setUserObj(false);\n    }\n    setInit(true);\n  });\n  },[]\n\n\n  );\n\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setUserObj({\n      uid : user.uid,\n      displayName : user.displayName,\n      updateProfile : (args) => user.updateProfile(args),\n    });\n  };\n\n  return(\n    <>\n     {init ? (<AppRouter refreshUser={refreshUser} isLoggedIn ={Boolean(userObj)} userObj ={userObj}/> ):( \"initializing...\" )}\n     \n    </>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}